.\"
.\" Copyright (C) 2003 The XFree86 Project, Inc.  All Rights Reserved.
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be
.\" included in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
.\" IN NO EVENT SHALL THE XFREE86 PROJECT BE LIABLE FOR ANY CLAIM, DAMAGES
.\" OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the XFree86 Project
.\" shall not be used in advertising or otherwise to promote the sale, use
.\" or other dealings in this Software without prior written authorization
.\" from the XFree86 Project.
.\"
.TH XVncExt __libmansuffix__ __vendorversion__
.SH NAME
XvncExt \- X11 VNC extension client library
.SH SYNOPSIS
.B #include <X11/extensions/Xvnc.h>
.PP
.nf
.ta .5i 2i
typedef struct {
	int type;
	unsigned long serial;
	Bool send_event;
	Display *display;
	Window window;
	Time time;
.br
} XVncExtClientCutTextEvent;

typedef struct {
	int type;
	unsigned long serial;
	Bool send_event;
	Display *display;
	Window window;
	Atom selection;
.br
} XVncExtSelectionChangeEvent;

typedef struct {
	int type;
	unsigned long serial;
	Bool send_event;
	Display *display;
	Window window;
.br
} XVncExtQueryConnectEvent;
.fi

.HP
\fBBool\fP XVncExtQueryExtension(\fBDisplay *\fP\fIdpy\fP, \fBint *\fP\fIevent_basep\fP, \fBint *\fP\fIerror_basep\fP);
.HP
\fBBool\fP XVncExtSetParam(\fBDisplay *\fP\fIdpy\fP, \fBconst char *\fP\fIparam\fP);
.HP
\fBBool\fP XVncExtGetParam(\fBDisplay *\fP\fIdpy\fP, \fBconst char *\fP\fIparam\fP, \fBchar **\fP\fIvalue\fP, \fBint *\fP\fIlen\fP);
.HP
\fBchar *\fPXVncExtGetParamDesc(\fBDisplay *\fP\fIdpy\fP, \fBconst char *\fP\fIparam\fP);
.HP
\fBchar **\fPXVncExtListParams(\fBDisplay *\fP\fIdpy\fP, \fBint *\fP\fInParams\fP);
.HP
\fBvoid\fP XVncExtFreeParamList(\fBchar **\fP\fIlist\fP);
.HP
\fBBool\fP XVncExtSetServerCutText(\fBDisplay *\fP\fIdpy\fP, \fBconst char *\fP\fIstr\fP, \fBint\fP \fIlen\fP);
.HP
\fBBool\fP XVncExtGetClientCutText(\fBDisplay *\fP\fIdpy\fP, \fBchar **\fP\fIstr\fP, \fBint *\fP\fIlen\fP);
.HP
\fBBool\fP XVncExtSelectInput(\fBDisplay *\fP\fIdpy\fP, \fBWindow\fP \fIw\fP, \fBint\fP \fImask\fP);
.HP
\fBBool\fP XVncExtConnect(\fBDisplay *\fP\fIdpy\fP, \fBchar *\fP\fIhostAndPort\fP);
.HP
\fBBool\fP XVncExtGetQueryConnect(\fBDisplay *\fP\fIdpy\fP, \fBchar **\fP\fIaddr\fP, \fBchar **\fP\fIuser\fP, \fBint *\fP\fItimeout\fP, \fBvoid **\fP\fIopaqueId\fP);
.HP
\fBBool\fP XVncExtApproveConnect(\fBDisplay *\fP\fIdpy\fP, \fBvoid *\fP\fIopaqueId\fP, \fBint\fP \fIapprove\fP);
.SH DESCRIPTION
The X Window System does not provide directly for extensions associated
with Virtual Network Computing (VNC).  The VNC extension provided by the
RealVNC, TigthVNC and TigerVNC servers provides facility for interacting
with the VNC server using the VNC X11 protocol extension.
.PP
The VNC extension provide the ability to query and set VNC specific
parameters.  It provides the ability to coordinate cut buffer text
between the VNC client and the VNC server.  It also provides the ability
to accept or refuse new incoming VNC cleint connections.
.PP
.B XVncExtQueryExtension
queries the VNC-EXTENSION and returns the event and error base numbers
assigned to the extension.  It returns \fBTrue\fP when the extension
exists and is supported; \fBFalse\fP, otherwise.
See also XQueryExtension(__miscmansuffix__).
.PP
.B XVncExtSetParam
sets the corresponding VNC parameter.  Returns \fBTrue\fP when
successful.
.PP
.B XVncExtGetParam
pets the specified VNC parameter and places its value in the buffer and
length provided.  Returns \fBTrue\fP on success.
.PP
.B XVncExtGetParamDesc
Returns a description of the specified parameter as a human-readable
string.
.PP
.B XVncExtListParams
queries the server to a list of supported parameters dnd returns a
pointer to an array of parmaeter names.  The number of items in the
returned array is stored in \fInParams\fP.  The array should be freed
with
.B XVncExtFreeParamList
when you are done with it.
.PP
.B XVncExtFreeParamList
frees a parameter list returned by
.BR XVncExtListParams .
.PP
.B XVncExtSetServerCutText
sets the server cut buffer text from the specified buffer of specified length.
.PP
.B XVncExtGetClientCutText
returns the client cut buffer text.
.PP
.B XVncExtSelectInput
selects which notifications (events) will be generated by the VNC
extension.  Possible \fImask\fP values are:
.RS
.TP
.B VncExtClientCutTextMask
selects for
.B XVncExtClientCutTextEvent
event.
.TP
.B VncExtSelectionChangeMask
selects for
.B XVncExtSelectionChangeEvent
event.
.TP
.B VncExtQueryConnectMask
selects for
.B XVncExtQueryConnectEvent
event.
.RE
.PP
\fImask\fP can be a logical \(dqOR\(dq of any of these mask values.
.PP
.B XVncExtConnect
requests that the VNC server generate an outgoing connection attempt to
a vnc viewer.  Thie host and port is specified using hostnamd and port
specification.  The hostname can be either a domain name or a decimal
and dots notation IPv4 address or an IPv5 address.
.PP
.B XVncExtGetQueryConnect
queries an incoming connection to the VNC server.  Returned is the
connection address, \fIaddr\fP, the remote user, \fIuser\fP, the
connection timeout, \fItimeout\fP, and an opaque connection identifier,
\fPopaqueId\fP.
.PP
.B XVncExtApproveConnect
approves or rejects and incoming connection to the VNC server.  To
approve a connection, \fIapprove\fP should be set to \fBTrue\fP.  The
\fIopaqueId\fP should specify the identifier previously retrieved using
the
.B XVncExtGetQueryConnect
library call.
.SH EVENTS
.PP
.B XVncExtClientCutTextEvent
provides notification that the client has selected text.
.PP
.B XVncExtSelectionChangeEvent
provides notification that the server selection has changed.
.PP
.B XVncExtQueryConnectEvent
provides notification that a client is attempting to connect to the VNC
server.
.SH "ERRORS"
.B XVncExtSelectInput,
will generate a
.I BadWindow
error if \fIw\fP is not a valid window identifier.
If any undefined bits are set in \fIevent-mask\fP,
a BadValue error is generated by
.B XVncExtSelectInput .
.PP
.SH AVAILABILITY
Version 1.1 was first released with X11R7.1.
.PP
.SH "SEE ALSO"
\fBX\fP(__miscmansuffix__),
\fBXvnc\fP(__miscmansuffix__),
\fBvncconfig\fP(__miscmansuffix__).
.SH AUTHOR
Brian Bidulock <bidulock@openss7.org>
.SH STABILITY
This API is considered as experimental.
The Xvnc library major revision may be incremented whenever
incompatible changes are done to the API without notice.
Use with care.
